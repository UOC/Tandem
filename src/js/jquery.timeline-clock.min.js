/**
 * ----------------------------------------------------------------------------------
 * TimeLineClock plugin for jQuery
 * Version: 1.0
 * Author: Raúl Fernández, raul@tambaqui.es
 * Copyright (c) 2012 Raúl Fernández
 * Licensed under the MIT license: http://www.opensource.org/licenses/mit-license.php
 * -----------------------------------------------------------------------------------
 **/
(function ($) {
    $.fn.timeLineClock = function (options) {
        var defaults = {
            time: {hh: 0, mm: 1, ss: 0},
            bool_hh: false,
            c1: '#669900',
            c2: '#cc9900',
            c3: '#cc0000',
            onEnd: function () {
            }
        };
        var o = $.extend(defaults, options);
        var tline = this;
        var timer = 0;
        var lbl = tline.find('.lbl');
        var line = tline.find('.line');
        var clock = tline.find('.clock');
        clock.html('<span class="mm">00</span>:<span class="ss">00</span>');
        if (o.bool_hh) tline.prepend('<span class="hh">00</span>:');
        var h_lbl = tline.find('.hh');
        var m_lbl = tline.find('.mm');
        var s_lbl = tline.find('.ss');
        var color = '';
        var h = o.time.hh;
        var m = o.time.mm;
        var s = o.time.ss;
        var total_millis = getMillis();
        var millis = total_millis;
        this.start = function () {
            timer = workerTimer.setInterval(do_time, 1000);
            // timer = setInterval(do_time, 1000)
        };
        this.stop = function () {
            workerTimer.clearInterval(timer);
            // clearInterval(timer);
            timer = 0
        };
        this.reset = function () {
            workerTimer.clearInterval(timer);
            // clearInterval(timer);
            timer = 0;
            h = o.hh;
            m = o.mm;
            s = o.ss;
            render()
        };

        function do_time() {
            s--;
            if (s < 0) {
                s = 59;
                m--
            }
            if (m < 0) {
                m = 59;
                h--
            }
            if (h < 0) {
                s = m = h = 0;
                tline.stop();
                if (typeof o.onEnd == 'function') o.onEnd.call(tline)
            }
            render()
        }

        function format(n) {
            return (n < 10 ? '0' : '') + n
        }

        function render() {
            millis = getMillis();
            var w = millis * 100 / total_millis;
            line.width(w + "%");
            if (w > 66) setColor(o.c1); else if (w > 33) setColor(o.c2); else setColor(o.c3);
            h_lbl.html(format(h));
            m_lbl.html(format(m));
            s_lbl.html(format(s))
        }

        function setColor(c) {
            if (c != color) {
                color = c;
                line.animate({backgroundColor: color}, 3000);
                clock.animate({backgroundColor: color}, 3000)
            }
        }

        function getMillis() {
            return (h * 60 * 60 * 1000) + (m * 60 * 1000) + (s * 1000)
        }

        render();
        return this
    }
})(jQuery);